<div id="smoke-bkg" class="fixed top-0 h-full w-full -z-10">

</div>

<script>
  import * as THREE from "three" // biblioteca animaciones 3d

  const $bkg = document.getElementById("smoke-bkg")

  let w = window.innerWidth
  let h = window.innerHeight

  // inicializar Three.js
  // 3 cosas básicas:  escena, cámara,renderizador   

  // escena 🪟
  const scene = new THREE.Scene()

  // camara 📷
  // 75 -> ángulo de visión
  const camera = new THREE.PerspectiveCamera(75, w / h, 0.1, 1000)
  camera.position.z = 10
  scene.add(camera)

  // renderizador 🎬
  const renderer = new THREE.WebGLRenderer()
  renderer.setSize(w, h)
  // color de fondo
  renderer.setClearColor(0x444444, 1)
  $bkg?.appendChild(renderer.domElement)

  // añadir una luz directional 
  const light = new THREE.DirectionalLight(0xffffff, 0.5)
  // posición de la luz
  light.position.set(-1, 3, 1)
  scene.add(light)

  // // para crear un objeto necesitamos 3 cosas
  // // 1. geometría
  // const geometry = new THREE.BoxGeometry(1, 1, 1)
  // // 2. material
  // const material = new THREE.MeshBasicMaterial({
  //   color: 0x0099ff
  // })
  // // 3. malla (mesh)
  // const cube = new THREE.Mesh(geometry, material)
  // scene.add(cube)

  const smokeParticles: THREE.Mesh[] = []

  const loader = new THREE.TextureLoader()
  loader.crossOrigin = "" // <- en localhost no pasa nada, pero si desplegamos a un servidor, puede ser necesario.

  loader.load("/smoke.webp", (texture) => {
    // 1. geometría
    // crear un plano geometrico de 300x300
    const smokeGeo = new THREE.PlaneGeometry(300, 300)

    // 2. material
    const smokeMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true
    })

    const NUM_OF_PARTICLES = 300
    for (let p = 0; p < NUM_OF_PARTICLES; p++) {
      // crear la malla con la geometría y el material
      const particle = new THREE.Mesh(smokeGeo, smokeMaterial)
      // posiciones aleatoríamente
      // en la x, y, z
      particle.position.set(
        Math.random() * 500 - 250, // x
        Math.random() * 500 - 250, // y
        Math.random() * 1000 - 100, // z
      )
      // aleatoríamente la z
      particle.rotation.z = Math.random() * 360
      // añadimos la particula en la escena
      scene.add(particle)
      // añadimos la particula al array
      smokeParticles.push(particle)
    }
  })

  function resize () {
    h = window.innerHeight
    w = window.innerWidth
    camera.aspect = w / h
    camera.updateProjectionMatrix() // este metodo lo tenes que ejecutar siempre que cambiamos los parámetros de la cámara
    renderer.setSize(w, h)
  }

  function animate() {
    requestAnimationFrame(animate)

    smokeParticles.forEach((particle) => {
      particle.rotation.z += 0.001
    })

    renderer.render(scene, camera)
  }
  animate()
  
  // se va activar continuamente mientras hace el resize
  window.addEventListener("resize", resize)
</script>